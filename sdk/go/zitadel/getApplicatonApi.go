// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package zitadel

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Datasource representing an API application belonging to a project, with all configuration possibilities.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-zitadel/sdk/go/zitadel"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			apiApplicationApplicatonApi, err := zitadel.GetApplicatonApi(ctx, &zitadel.GetApplicatonApiArgs{
//				OrgId:     data.Zitadel_org.Org.Id,
//				ProjectId: data.Zitadel_project.Project.Id,
//				AppId:     "177073625566806019",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("apiApplication", apiApplicationApplicatonApi)
//			return nil
//		})
//	}
//
// ```
func GetApplicatonApi(ctx *pulumi.Context, args *GetApplicatonApiArgs, opts ...pulumi.InvokeOption) (*GetApplicatonApiResult, error) {
	var rv GetApplicatonApiResult
	err := ctx.Invoke("zitadel:index/getApplicatonApi:getApplicatonApi", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getApplicatonApi.
type GetApplicatonApiArgs struct {
	// The ID of this resource.
	AppId string `pulumi:"appId"`
	// orgID of the application
	OrgId string `pulumi:"orgId"`
	// ID of the project
	ProjectId string `pulumi:"projectId"`
}

// A collection of values returned by getApplicatonApi.
type GetApplicatonApiResult struct {
	// The ID of this resource.
	AppId string `pulumi:"appId"`
	// Auth method type
	AuthMethodType string `pulumi:"authMethodType"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Name of the application
	Name string `pulumi:"name"`
	// orgID of the application
	OrgId string `pulumi:"orgId"`
	// ID of the project
	ProjectId string `pulumi:"projectId"`
}

func GetApplicatonApiOutput(ctx *pulumi.Context, args GetApplicatonApiOutputArgs, opts ...pulumi.InvokeOption) GetApplicatonApiResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetApplicatonApiResult, error) {
			args := v.(GetApplicatonApiArgs)
			r, err := GetApplicatonApi(ctx, &args, opts...)
			var s GetApplicatonApiResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetApplicatonApiResultOutput)
}

// A collection of arguments for invoking getApplicatonApi.
type GetApplicatonApiOutputArgs struct {
	// The ID of this resource.
	AppId pulumi.StringInput `pulumi:"appId"`
	// orgID of the application
	OrgId pulumi.StringInput `pulumi:"orgId"`
	// ID of the project
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (GetApplicatonApiOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicatonApiArgs)(nil)).Elem()
}

// A collection of values returned by getApplicatonApi.
type GetApplicatonApiResultOutput struct{ *pulumi.OutputState }

func (GetApplicatonApiResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApplicatonApiResult)(nil)).Elem()
}

func (o GetApplicatonApiResultOutput) ToGetApplicatonApiResultOutput() GetApplicatonApiResultOutput {
	return o
}

func (o GetApplicatonApiResultOutput) ToGetApplicatonApiResultOutputWithContext(ctx context.Context) GetApplicatonApiResultOutput {
	return o
}

// The ID of this resource.
func (o GetApplicatonApiResultOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicatonApiResult) string { return v.AppId }).(pulumi.StringOutput)
}

// Auth method type
func (o GetApplicatonApiResultOutput) AuthMethodType() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicatonApiResult) string { return v.AuthMethodType }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetApplicatonApiResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicatonApiResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the application
func (o GetApplicatonApiResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicatonApiResult) string { return v.Name }).(pulumi.StringOutput)
}

// orgID of the application
func (o GetApplicatonApiResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicatonApiResult) string { return v.OrgId }).(pulumi.StringOutput)
}

// ID of the project
func (o GetApplicatonApiResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetApplicatonApiResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetApplicatonApiResultOutput{})
}
