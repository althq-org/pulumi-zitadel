// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Zitadel
{
    public static class GetApplicatonApi
    {
        /// <summary>
        /// Datasource representing an API application belonging to a project, with all configuration possibilities.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zitadel = Pulumi.Zitadel;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var apiApplicationApplicatonApi = Zitadel.GetApplicatonApi.Invoke(new()
        ///     {
        ///         OrgId = data.Zitadel_org.Org.Id,
        ///         ProjectId = data.Zitadel_project.Project.Id,
        ///         AppId = "177073625566806019",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["apiApplication"] = apiApplicationApplicatonApi,
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetApplicatonApiResult> InvokeAsync(GetApplicatonApiArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApplicatonApiResult>("zitadel:index/getApplicatonApi:getApplicatonApi", args ?? new GetApplicatonApiArgs(), options.WithDefaults());

        /// <summary>
        /// Datasource representing an API application belonging to a project, with all configuration possibilities.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Zitadel = Pulumi.Zitadel;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var apiApplicationApplicatonApi = Zitadel.GetApplicatonApi.Invoke(new()
        ///     {
        ///         OrgId = data.Zitadel_org.Org.Id,
        ///         ProjectId = data.Zitadel_project.Project.Id,
        ///         AppId = "177073625566806019",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["apiApplication"] = apiApplicationApplicatonApi,
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetApplicatonApiResult> Invoke(GetApplicatonApiInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplicatonApiResult>("zitadel:index/getApplicatonApi:getApplicatonApi", args ?? new GetApplicatonApiInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplicatonApiArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        [Input("appId", required: true)]
        public string AppId { get; set; } = null!;

        /// <summary>
        /// orgID of the application
        /// </summary>
        [Input("orgId", required: true)]
        public string OrgId { get; set; } = null!;

        /// <summary>
        /// ID of the project
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetApplicatonApiArgs()
        {
        }
        public static new GetApplicatonApiArgs Empty => new GetApplicatonApiArgs();
    }

    public sealed class GetApplicatonApiInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        /// <summary>
        /// orgID of the application
        /// </summary>
        [Input("orgId", required: true)]
        public Input<string> OrgId { get; set; } = null!;

        /// <summary>
        /// ID of the project
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetApplicatonApiInvokeArgs()
        {
        }
        public static new GetApplicatonApiInvokeArgs Empty => new GetApplicatonApiInvokeArgs();
    }


    [OutputType]
    public sealed class GetApplicatonApiResult
    {
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string AppId;
        /// <summary>
        /// Auth method type
        /// </summary>
        public readonly string AuthMethodType;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the application
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// orgID of the application
        /// </summary>
        public readonly string OrgId;
        /// <summary>
        /// ID of the project
        /// </summary>
        public readonly string ProjectId;

        [OutputConstructor]
        private GetApplicatonApiResult(
            string appId,

            string authMethodType,

            string id,

            string name,

            string orgId,

            string projectId)
        {
            AppId = appId;
            AuthMethodType = authMethodType;
            Id = id;
            Name = name;
            OrgId = orgId;
            ProjectId = projectId;
        }
    }
}
